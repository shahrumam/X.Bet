// <auto-generated />
using System;
using DanaBet.Applications;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DanaBet.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20251019195535_make-table-Games")]
    partial class maketableGames
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.10");

            modelBuilder.Entity("DanaBet.DBModel.Games", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Version")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("TBL_Games");
                });

            modelBuilder.Entity("DanaBet.DBModel.LeagueGroups", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("LeagueLevelsId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("LevelId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Name")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("LeagueLevelsId");

                    b.ToTable("TBL_LeagueGroups");
                });

            modelBuilder.Entity("DanaBet.DBModel.LeagueGroupsUsers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("LeagueGroupId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("LeagueGroupsId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("LeagueGroupsId");

                    b.ToTable("TBL_LeagueGroupsUsers");
                });

            modelBuilder.Entity("DanaBet.DBModel.LeagueLevels", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("LeagueId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("LeaguesId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Name")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("LeaguesId");

                    b.ToTable("TBL_LeagueLevels");
                });

            modelBuilder.Entity("DanaBet.DBModel.LeagueScores", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<int>("LeagueGroupUserId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("LeagueGroupsUsersId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("MaxUserCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("LeagueGroupsUsersId");

                    b.ToTable("TBL_LeagueScores");
                });

            modelBuilder.Entity("DanaBet.DBModel.LeagueUsers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("LeagueId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("LeaguesId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("UsersId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("LeaguesId");

                    b.HasIndex("UsersId");

                    b.ToTable("TBL_LeagueUsers");
                });

            modelBuilder.Entity("DanaBet.DBModel.Leagues", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("GameId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("GamesId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("MaxUserCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("GamesId");

                    b.ToTable("TBL_Leagues");
                });

            modelBuilder.Entity("DanaBet.DBModel.Users", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Mobile")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("TBL_Users");
                });

            modelBuilder.Entity("DanaBet.DBModel.LeagueGroups", b =>
                {
                    b.HasOne("DanaBet.DBModel.LeagueLevels", "LeagueLevels")
                        .WithMany()
                        .HasForeignKey("LeagueLevelsId");

                    b.Navigation("LeagueLevels");
                });

            modelBuilder.Entity("DanaBet.DBModel.LeagueGroupsUsers", b =>
                {
                    b.HasOne("DanaBet.DBModel.LeagueGroups", "LeagueGroups")
                        .WithMany()
                        .HasForeignKey("LeagueGroupsId");

                    b.Navigation("LeagueGroups");
                });

            modelBuilder.Entity("DanaBet.DBModel.LeagueLevels", b =>
                {
                    b.HasOne("DanaBet.DBModel.Leagues", "Leagues")
                        .WithMany()
                        .HasForeignKey("LeaguesId");

                    b.Navigation("Leagues");
                });

            modelBuilder.Entity("DanaBet.DBModel.LeagueScores", b =>
                {
                    b.HasOne("DanaBet.DBModel.LeagueGroupsUsers", "LeagueGroupsUsers")
                        .WithMany()
                        .HasForeignKey("LeagueGroupsUsersId");

                    b.Navigation("LeagueGroupsUsers");
                });

            modelBuilder.Entity("DanaBet.DBModel.LeagueUsers", b =>
                {
                    b.HasOne("DanaBet.DBModel.Leagues", "Leagues")
                        .WithMany()
                        .HasForeignKey("LeaguesId");

                    b.HasOne("DanaBet.DBModel.Users", "Users")
                        .WithMany()
                        .HasForeignKey("UsersId");

                    b.Navigation("Leagues");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("DanaBet.DBModel.Leagues", b =>
                {
                    b.HasOne("DanaBet.DBModel.Games", "Games")
                        .WithMany()
                        .HasForeignKey("GamesId");

                    b.Navigation("Games");
                });
#pragma warning restore 612, 618
        }
    }
}
